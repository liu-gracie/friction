{"ast":null,"code":"var _jsxFileName = \"/Users/liugracie/Desktop/Web/friction/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dateInput, setDateInput] = useState(\"\");\n  const [photos, setPhotos] = useState([]);\n  const handleDateChange = e => {\n    setDateInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Make an API request to fetch photos for the entered date\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/getPhotos\", {\n        date: dateInput\n      });\n      setPhotos(response.data.photos);\n    } catch (error) {\n      console.error(\"Error fetching photos:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Photo Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Date (YYYY-MM-DD):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dateInput,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Matching Photos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: photos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No photos found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.url,\n            alt: photo.date,\n            width: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: photo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XKlw/c+5Y9wo79MQrLmuejqbw2s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","dateInput","setDateInput","photos","setPhotos","handleDateChange","e","target","value","handleSubmit","preventDefault","response","post","date","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","length","map","photo","index","src","url","alt","width","_c","$RefreshReg$"],"sources":["/Users/liugracie/Desktop/Web/friction/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [dateInput, setDateInput] = useState(\"\");\n  const [photos, setPhotos] = useState([]);\n\n  const handleDateChange = (e) => {\n    setDateInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Make an API request to fetch photos for the entered date\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/getPhotos\", {\n        date: dateInput,\n      });\n      setPhotos(response.data.photos);\n    } catch (error) {\n      console.error(\"Error fetching photos:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Photo Finder</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Enter Date (YYYY-MM-DD):\n          <input\n            type=\"date\"\n            value={dateInput}\n            onChange={handleDateChange}\n          />\n        </label>\n        <button type=\"submit\">Search Photos</button>\n      </form>\n\n      <div>\n        <h2>Matching Photos:</h2>\n        <div>\n          {photos.length === 0 ? (\n            <p>No photos found.</p>\n          ) : (\n            photos.map((photo, index) => (\n              <div key={index}>\n                <img src={photo.url} alt={photo.date} width=\"200\" />\n                <p>{photo.date}</p>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}